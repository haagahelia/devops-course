"use strict";(self.webpackChunkdevops=self.webpackChunkdevops||[]).push([[970],{6871:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Course Intro","href":"/devops-course/docs/intro","docId":"intro","unlisted":false},{"type":"category","label":"Introduction to DevOps","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"What is DevOps?","href":"/devops-course/docs/basics/devops-basics","docId":"basics/devops-basics","unlisted":false}],"href":"/devops-course/docs/category/introduction-to-devops"},{"type":"category","label":"Version Control","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Git","href":"/devops-course/docs/versionControl/","docId":"versionControl/versionControl","unlisted":false},{"type":"link","label":"Collaboration","href":"/devops-course/docs/versionControl/collaboration","docId":"versionControl/collaboration","unlisted":false}],"href":"/devops-course/docs/category/version-control"},{"type":"category","label":"Containerization","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction to Docker","href":"/devops-course/docs/containerization/docker","docId":"containerization/docker","unlisted":false}],"href":"/devops-course/docs/category/containerization"},{"type":"category","label":"Automating CI Workflows","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Continuous Integration (CI)","href":"/devops-course/docs/automating/general","docId":"automating/general","unlisted":false},{"type":"link","label":"Github Actions","href":"/devops-course/docs/automating/githubActions","docId":"automating/githubActions","unlisted":false},{"type":"link","label":"Writing workflows","href":"/devops-course/docs/automating/workflows","docId":"automating/workflows","unlisted":false},{"type":"link","label":"CI Pipelines","href":"/devops-course/docs/automating/cipipeline","docId":"automating/cipipeline","unlisted":false},{"type":"link","label":"Write actions","href":"/devops-course/docs/automating/writeactions","docId":"automating/writeactions","unlisted":false}],"href":"/devops-course/docs/category/automating-ci-workflows"},{"type":"category","label":"Deployment & Delivery","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Deployment & Delivery","href":"/devops-course/docs/deployment/general","docId":"deployment/general","unlisted":false},{"type":"link","label":"CD pipeline","href":"/devops-course/docs/deployment/","docId":"deployment/deployment","unlisted":false},{"type":"link","label":"Versioning","href":"/devops-course/docs/deployment/versioning","docId":"deployment/versioning","unlisted":false},{"type":"link","label":"Tags","href":"/devops-course/docs/deployment/tags","docId":"deployment/tags","unlisted":false},{"type":"link","label":"Deployment using containers","href":"/devops-course/docs/deployment/deploymentContainers","docId":"deployment/deploymentContainers","unlisted":false}],"href":"/devops-course/docs/category/deployment--delivery"},{"type":"category","label":"Security & Monitoring","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Monitoring in DevOps","href":"/devops-course/docs/monitoring/","docId":"monitoring/monitoring","unlisted":false},{"type":"link","label":"Monitoring Github workflows","href":"/devops-course/docs/monitoring/monitoringActions","docId":"monitoring/monitoringActions","unlisted":false},{"type":"link","label":"Log Monitoring","href":"/devops-course/docs/monitoring/logmonitoring","docId":"monitoring/logmonitoring","unlisted":false},{"type":"link","label":"Security","href":"/devops-course/docs/monitoring/security","docId":"monitoring/security","unlisted":false},{"type":"link","label":"Secrets","href":"/devops-course/docs/monitoring/secrets","docId":"monitoring/secrets","unlisted":false}],"href":"/devops-course/docs/category/security--monitoring"},{"type":"category","label":"Final Project","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Final Project","href":"/devops-course/docs/finalProject/","docId":"finalProject/finalProject","unlisted":false}],"href":"/devops-course/docs/category/final-project"}]},"docs":{"automating/cipipeline":{"id":"automating/cipipeline","title":"CI Pipelines","description":"CI workflow","sidebar":"tutorialSidebar"},"automating/general":{"id":"automating/general","title":"Continuous Integration (CI)","description":"CI loop","sidebar":"tutorialSidebar"},"automating/githubActions":{"id":"automating/githubActions","title":"Github Actions","description":"GitHub Actions is a continuous integration and continuous delivery (CI/CD) platform that allows you to automate your build, test, and deployment pipeline. You can create workflows that build and test every pull request to your repository, or deploy merged pull requests to production Github.","sidebar":"tutorialSidebar"},"automating/workflows":{"id":"automating/workflows","title":"Writing workflows","description":"Writing your first GitHub Actions workflow","sidebar":"tutorialSidebar"},"automating/writeactions":{"id":"automating/writeactions","title":"Write actions","description":"So far in this course, we\'ve used pre-built GitHub Actions from the GitHub Marketplace to automate tasks in our CI pipelines. These actions are excellent for common use cases, but sometimes your workflow needs something more specific or flexible. That\'s where writing your own GitHub Actions becomes powerful.","sidebar":"tutorialSidebar"},"basics/devops-basics":{"id":"basics/devops-basics","title":"What is DevOps?","description":"DevOps is a set of practices, tools, and a cultural philosophy that automates and integrates the processes between software development and IT operations teams. It emphasizes collaboration and communication to deliver software faster and more reliably.","sidebar":"tutorialSidebar"},"containerization/docker":{"id":"containerization/docker","title":"Introduction to Docker","description":"Docker has quickly become a fundamental tool in modern software development. In 2024 StackOverflow developer survey, it was both the most used and most admired tool for compiling, building and testing. Docker allows developers to package applications and their dependencies into containers, ensuring that they run consistently across different environments. Containers not only ensure that a single application runs the same way on any machine, but they also make it efficient to run multiple applications with different dependencies on the same host without conflicts.","sidebar":"tutorialSidebar"},"deployment/deployment":{"id":"deployment/deployment","title":"CD pipeline","description":"Deployment","sidebar":"tutorialSidebar"},"deployment/deploymentContainers":{"id":"deployment/deploymentContainers","title":"Deployment using containers","description":"Containers are a popular way to deploy applications in the cloud. As discussed earlier, they provide a lightweight and portable way to package applications and their dependencies, making it easier to deploy and manage them across different environments.","sidebar":"tutorialSidebar"},"deployment/general":{"id":"deployment/general","title":"Deployment & Delivery","description":"CD loop","sidebar":"tutorialSidebar"},"deployment/tags":{"id":"deployment/tags","title":"Tags","description":"Creating tags","sidebar":"tutorialSidebar"},"deployment/versioning":{"id":"deployment/versioning","title":"Versioning","description":"Versioning helps developers track and document changes made to the software over time, making it easier to identify when and why a specific change was introduced. Versioning enables developers to revert to a previous version of the software if a bug or issue is introduced in a newer version. It also helps communicate updates and changes to users, making it clear which features or fixes are included in a specific release.","sidebar":"tutorialSidebar"},"finalProject/finalProject":{"id":"finalProject/finalProject","title":"Final Project","description":"Final Project: End-to-End CI/CD Pipeline","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Course Intro","description":"Welcome to the DevOps course!","sidebar":"tutorialSidebar"},"monitoring/logmonitoring":{"id":"monitoring/logmonitoring","title":"Log Monitoring","description":"Log monitoring refers to the continuous process of collecting, storing, and analyzing log data generated by applications, servers, containers, and other infrastructure components. Logs contain time-stamped records of events that help developers and operators understand system behavior, troubleshoot issues, and ensure security and compliance.","sidebar":"tutorialSidebar"},"monitoring/monitoring":{"id":"monitoring/monitoring","title":"Monitoring in DevOps","description":"Monitoring is a critical part of DevOps practices. It ensures the health, performance, and reliability of applications, infrastructure, and services.","sidebar":"tutorialSidebar"},"monitoring/monitoringActions":{"id":"monitoring/monitoringActions","title":"Monitoring Github workflows","description":"Github provides tools to monitor workflows in Github Actions. You have already seen the visualization graph that illustrates the workflow run progress.","sidebar":"tutorialSidebar"},"monitoring/secrets":{"id":"monitoring/secrets","title":"Secrets","description":"When working with CI/CD pipelines, it\'s common to need credentials or API keys\u2014for example, to deploy to a cloud provider or access third-party services. Storing these securely is critical. GitHub Secrets provides a secure way to store and manage sensitive data like when using GiHub actions. Each CI/CD platform has its own way of managing secrets.","sidebar":"tutorialSidebar"},"monitoring/security":{"id":"monitoring/security","title":"Security","description":"DevSecOps is the practice of integrating security into every stage of the software development lifecycle, combining development (Dev), security (Sec), and operations (Ops). It emphasizes collaboration between development, security, and operations teams to identify and address security issues early and continuously.","sidebar":"tutorialSidebar"},"versionControl/collaboration":{"id":"versionControl/collaboration","title":"Collaboration","description":"In a team environment, effective collaboration is crucial not only for the success of the team, but also for enjoying the work you do. Managing a project with Excel or Google Sheets and sending email attachments may work for a limited time with a small team, but it can become frustrating and inefficient quite quickly.","sidebar":"tutorialSidebar"},"versionControl/versionControl":{"id":"versionControl/versionControl","title":"Git","description":"Git is a distributed version control system that allows multiple developers to work on the same codebase simultaneously without overwriting each other\'s changes. Since the creation of Git in 2005, it has become the de facto standard for version control in software development.","sidebar":"tutorialSidebar"}}}}')}}]);