"use strict";(self.webpackChunkdevops=self.webpackChunkdevops||[]).push([[997],{5726:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"basics/devops-basics","title":"What is DevOps?","description":"DevOps is a set of practices, tools, and a cultural philosophy that automates and integrates the processes between software development and IT operations teams. It emphasizes collaboration and communication to deliver software faster and more reliably.","source":"@site/docs/basics/devops-basics.md","sourceDirName":"basics","slug":"/basics/devops-basics","permalink":"/devops-course/docs/basics/devops-basics","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/basics/devops-basics.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"What is DevOps?"},"sidebar":"tutorialSidebar","previous":{"title":"Introduction to DevOps","permalink":"/devops-course/docs/category/introduction-to-devops"},"next":{"title":"Version Control","permalink":"/devops-course/docs/category/version-control"}}');var t=n(4848),o=n(8453);const r={sidebar_position:1,title:"What is DevOps?"},a=void 0,l={},d=[{value:"CI",id:"ci",level:4},{value:"CD",id:"cd",level:4},{value:"What Does DevOps Require from a Software Developer?",id:"what-does-devops-require-from-a-software-developer",level:3},{value:"CALMS framework",id:"calms-framework",level:3},{value:"Tools used in each DEVOPS stage",id:"tools-used-in-each-devops-stage",level:3},{value:"Further Reading",id:"further-reading",level:3}];function c(e){const s={a:"a",admonition:"admonition",blockquote:"blockquote",em:"em",h3:"h3",h4:"h4",hr:"hr",img:"img",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"DevOps"})," is a set of practices, tools, and a cultural philosophy that automates and integrates the processes between software development and IT operations teams. It emphasizes collaboration and communication to deliver software faster and more reliably."]}),"\n",(0,t.jsx)(s.p,{children:"Traditionally, development and operations teams worked in silos. Developers focused on writing code and releasing new features, while operations teams were responsible for maintaining the stability and availability of the systems. This often led to conflicts and delays."}),"\n",(0,t.jsxs)(s.p,{children:["DevOps aims to break down these silos by introducing a culture of shared responsibility. It promotes ",(0,t.jsx)(s.strong,{children:"automation"}),", ",(0,t.jsx)(s.strong,{children:"continuous integration"}),", and ",(0,t.jsx)(s.strong,{children:"continuous delivery"})," (CI/CD) to streamline the software development lifecycle. By using DevOps practices, organizations can achieve faster time to market, improved software quality, and increased customer satisfaction."]}),"\n",(0,t.jsx)(s.p,{children:"The following image describes the DevOps loop:"}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.img,{alt:"DevOps loop",src:n(9068).A+"",width:"512",height:"291"})}),"\n",(0,t.jsxs)(s.p,{children:["DevOps loop image from ",(0,t.jsx)(s.a,{href:"https://commons.wikimedia.org/",children:"https://commons.wikimedia.org/"})," (Kharnagy, CC BY-SA 4.0 license)"]}),"\n",(0,t.jsx)(s.p,{children:"The DevOps loop illustrates the iterative nature of DevOps practices. It consists of the following stages:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Plan:"})," Development team Define and prioritize features and requirements."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Create/Code:"})," Develop planned features using the same codebase."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Verify / Test:"})," Perform automated and manual testing to ensure quality."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Package / Build:"})," Integrate code changes and create software builds."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Release / Deploy:"})," Deploy the software to the target environment."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Configure / Operate:"})," Monitor and manage the software in production."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Monitor / Observe:"})," Track performance and identify issues. Analyze data and feedback to improve the process."]}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"DevOps offer advantages for organizations by breaking down silos and promoting automation. DevOps can help teams deliver software faster, more reliably, and with greater efficiency. Here are some key benefits of using DevOps:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Faster Time to Market:"})," DevOps enables organizations to release software faster by automating and streamlining the development and deployment processes."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Improved Software Quality:"})," Continuous testing and feedback loops help identify and fix issues early in the development cycle."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Increased Customer Satisfaction:"})," By delivering software faster and with fewer bugs, DevOps can lead to increased customer satisfaction."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Better Collaboration:"})," DevOps promotes collaboration and communication between development and operations teams, leading to better teamwork."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Greater Efficiency:"})," Automation and streamlined processes can help organizations reduce costs and improve efficiency."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Better Reliability:"})," DevOps practices such as continuous monitoring and automated recovery can help ensure that systems are reliable and available."]}),"\n"]}),"\n",(0,t.jsx)(s.h4,{id:"ci",children:"CI"}),"\n",(0,t.jsx)(s.p,{children:"CI (Continuous Integration) is a practice where developers frequently integrate their code changes into a shared repository. Each integration is automatically verified by running a build and tests. This helps detect and fix issues early, improving code quality and reducing the risk of bugs in production."}),"\n",(0,t.jsx)(s.h4,{id:"cd",children:"CD"}),"\n",(0,t.jsx)(s.p,{children:"CD (Continuous Delivery) is a practice where code changes are automatically prepared for release to production. It builds on Continuous Integration by ensuring that code is always in a deployable state. With CD, every change that passes automated tests is automatically deployed to a staging environment or optionally to production. This reduces manual work and ensures that deployments are consistent and reliable."}),"\n",(0,t.jsxs)(s.p,{children:["You can read more about CI/CD in ",(0,t.jsx)(s.a,{href:"https://www.atlassian.com/continuous-delivery/principles/continuous-integration-vs-delivery-vs-deployment",children:"https://www.atlassian.com/continuous-delivery/principles/continuous-integration-vs-delivery-vs-deployment"}),"."]}),"\n",(0,t.jsx)(s.h3,{id:"what-does-devops-require-from-a-software-developer",children:"What Does DevOps Require from a Software Developer?"}),"\n",(0,t.jsx)(s.p,{children:"DevOps requires software developers to adopt a mindset and skill set that goes beyond traditional development roles."}),"\n",(0,t.jsx)(s.p,{children:"Developers should be familiar with Continuous Integration and Continuous Delivery (CI/CD) practices. This includes writing code that integrates seamlessly, creating automated tests, and ensuring that builds are deployable.  Developers must work closely with operations and other teams to ensure smooth integration and delivery of software."}),"\n",(0,t.jsx)(s.p,{children:"Developers are expected to be familiar with development automatization, such as writing scripts for build, test, and deployment processes. Developers should design applications with monitoring in mind. This includes adding logging, metrics, and tracing to help identify and resolve issues in production."}),"\n",(0,t.jsx)(s.p,{children:"Developers should know security practices of the development process (DevSecOps). They should write secure code and use tools to identify vulnerabilities early. DevOps is an continuous evolving field. Developers must stay updated with the latest tools, practices, and technologies."}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.em,{children:"People and culture are the top factors of a successful DevOps implementation."}),"\nAtlassian 2020 DevOps Trends Survey (",(0,t.jsx)(s.a,{href:"https://www.atlassian.com/whitepapers/devops-survey-2020",children:"https://www.atlassian.com/whitepapers/devops-survey-2020"}),")"]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"calms-framework",children:"CALMS framework"}),"\n",(0,t.jsx)(s.p,{children:"CALMS is a framework that can be used to assess company's ability to adopt DevOps processes. It is created by Jez Humble, co-author of The DevOps Handbook and Accelerate."}),"\n",(0,t.jsx)(s.p,{children:"CALMS is an acronym for:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"C"}),"ulture"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"A"}),"utomation"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"L"}),"ean"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"M"}),"easurement"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"S"}),"haring"]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["You can read more about CALMS in ",(0,t.jsx)(s.a,{href:"https://www.atlassian.com/devops/frameworks/calms-framework",children:"https://www.atlassian.com/devops/frameworks/calms-framework"}),"."]}),"\n",(0,t.jsx)(s.h3,{id:"tools-used-in-each-devops-stage",children:"Tools used in each DEVOPS stage"}),"\n",(0,t.jsx)(s.p,{children:"Here are some commonly used tools in each stage of the DevOps lifecycle:"}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Plan & Code:"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"GitHub, GitLab"}),"\n",(0,t.jsx)(s.li,{children:"Jira"}),"\n",(0,t.jsx)(s.li,{children:"Trello"}),"\n",(0,t.jsx)(s.li,{children:"Azure Boards"}),"\n",(0,t.jsx)(s.li,{children:"Git"}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Build:"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Maven"}),"\n",(0,t.jsx)(s.li,{children:"Gradle"}),"\n",(0,t.jsx)(s.li,{children:"npm, yarn, pnpm"}),"\n",(0,t.jsx)(s.li,{children:"Docker"}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Test:"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Selenium"}),"\n",(0,t.jsx)(s.li,{children:"JUnit"}),"\n",(0,t.jsx)(s.li,{children:"JEST"}),"\n",(0,t.jsx)(s.li,{children:"Playwright"}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Deploy:"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"GitHub Actions"}),"\n",(0,t.jsx)(s.li,{children:"Jenkins"}),"\n",(0,t.jsx)(s.li,{children:"CircleCI"}),"\n",(0,t.jsx)(s.li,{children:"Kubernetes"}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Operate:"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Ansible"}),"\n",(0,t.jsx)(s.li,{children:"Chef"}),"\n",(0,t.jsx)(s.li,{children:"Puppet"}),"\n",(0,t.jsx)(s.li,{children:"Terraform"}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Monitor:"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Prometheus"}),"\n",(0,t.jsx)(s.li,{children:"Grafana"}),"\n",(0,t.jsx)(s.li,{children:"Datadog"}),"\n",(0,t.jsx)(s.li,{children:"BetterStack"}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"In this course, we are mostly using tools from Github and Docker for containerization."}),"\n",(0,t.jsxs)(s.admonition,{title:"TASK: CI/CD workflow",type:"info",children:[(0,t.jsx)(s.p,{children:"Work in groups of 2\u20134. In this task, you will apply your understanding of basic CI/CD and DevOps concepts. The goal is to design a simple CI/CD pipeline for a application, without writing any code or configuration files. This is a conceptual task that helps you think about how software delivery can be automated and improved."}),(0,t.jsx)(s.p,{children:"Imagine your team is developing a basic web application (e.g., a calculator, to-do list, or blog). You want to implement a CI/CD process to improve the way the application is tested and delivered."}),(0,t.jsx)(s.p,{children:"Answer the following questions:"}),(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"When should the automation pipeline be triggered? (e.g., on pull request, push to main, release tag)"}),"\n",(0,t.jsx)(s.li,{children:"What stages should your pipeline include? (e.g., linting, testing, build, deploy)"}),"\n",(0,t.jsx)(s.li,{children:"At what points should human review or approval be required? (e.g., code review, manual deploy)"}),"\n",(0,t.jsx)(s.li,{children:"What are the benefits of this process for the development team and end users?"}),"\n"]}),(0,t.jsx)(s.p,{children:"Tip:\nYou may use predefined steps such as:"}),(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Run unit tests"}),"\n",(0,t.jsx)(s.li,{children:"Deploy to staging"}),"\n",(0,t.jsx)(s.li,{children:"Notify team via Slack"}),"\n",(0,t.jsx)(s.li,{children:"Lint code"}),"\n",(0,t.jsx)(s.li,{children:"Build the application"}),"\n"]}),(0,t.jsx)(s.p,{children:"Organize these steps in a logical order to reflect a basic CI/CD pipeline."}),(0,t.jsx)(s.p,{children:"Be ready to present your example to the class (5 minutes per group)."})]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h3,{id:"further-reading",children:"Further Reading"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"https://www.atlassian.com/devops",children:"https://www.atlassian.com/devops"})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"https://github.com/resources/articles/devops/what-is-devops",children:"https://github.com/resources/articles/devops/what-is-devops"})}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>r,x:()=>a});var i=n(6540);const t={},o=i.createContext(t);function r(e){const s=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(o.Provider,{value:s},e.children)}},9068:(e,s,n)=>{n.d(s,{A:()=>i});const i=n.p+"assets/images/devops_loop-306de90db2c218e7cfafeac7ffaf795e.png"}}]);