"use strict";(self.webpackChunkdevops=self.webpackChunkdevops||[]).push([[877],{6629:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"deployment/versioning","title":"Versioning","description":"Versioning helps developers track and document changes made to the software over time, making it easier to identify when and why a specific change was introduced. Versioning enables developers to revert to a previous version of the software if a bug or issue is introduced in a newer version. It also helps communicate updates and changes to users, making it clear which features or fixes are included in a specific release.","source":"@site/docs/deployment/versioning.md","sourceDirName":"deployment","slug":"/deployment/versioning","permalink":"/devops-course/docs/deployment/versioning","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/deployment/versioning.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3,"title":"Versioning"},"sidebar":"tutorialSidebar","previous":{"title":"CD pipeline","permalink":"/devops-course/docs/deployment/"},"next":{"title":"Tags","permalink":"/devops-course/docs/deployment/tags"}}');var r=i(4848),t=i(8453);const o={sidebar_position:3,title:"Versioning"},a=void 0,c={},d=[{value:"Semantic Versioning",id:"semantic-versioning",level:3},{value:"Further reading",id:"further-reading",level:3}];function l(e){const n={a:"a",code:"code",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"Versioning helps developers track and document changes made to the software over time, making it easier to identify when and why a specific change was introduced. Versioning enables developers to revert to a previous version of the software if a bug or issue is introduced in a newer version. It also helps communicate updates and changes to users, making it clear which features or fixes are included in a specific release."}),"\n",(0,r.jsx)(n.h3,{id:"semantic-versioning",children:"Semantic Versioning"}),"\n",(0,r.jsxs)(n.p,{children:["Semantic versioning is s one of the most common and widely used versioning systems in software development. Semantic versioning (",(0,r.jsx)(n.a,{href:"https://semver.org/",children:"https://semver.org/"}),") follows the format of:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"MAJOR.MINOR.PATCH\n"})}),"\n",(0,r.jsx)(n.p,{children:",where"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"MAJOR"}),": Major is incremented for breaking changes that break backward compatibility"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"MINOR"}),": Minor is incremented for backward-compatible functionality additions."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"PATCH"}),": Patch is Incremented for backward-compatible bug fixes."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Example:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"1.0.0: Initial stable release"}),"\n",(0,r.jsx)(n.li,{children:"1.0.1: Bug fixes"}),"\n",(0,r.jsx)(n.li,{children:"1.1.0: New features, backward-compatible"}),"\n",(0,r.jsx)(n.li,{children:"2.0.0: Breaking changes"}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"further-reading",children:"Further reading"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://semver.org/",children:"https://semver.org/"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://docs.npmjs.com/about-semantic-versioning",children:"https://docs.npmjs.com/about-semantic-versioning"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>a});var s=i(6540);const r={},t=s.createContext(r);function o(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);